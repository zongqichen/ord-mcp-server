{
  "ord.md": "# Customizing the ORD Document\n\nThe CAP-JS ORD plugin automatically generates all values in the ORD document by default. However, you can customize or override this behavior in two main ways:\n\n---\n\n## 1. Overriding Global Application Information\n\nGlobal settings can be defined using the `present configuration` in your `cdsrc.json` or `package.json` file under the `ord` section.\n\n**Example:**\n\n```json\n{\n    \"ord\": {\n        \"namespace\": \"sap.sample\",\n        \"description\": \"This is my custom description\",\n        \"policyLevels\": [\"sap:core:v1\"]\n    }\n}\n```\n\n---\n\n## 2. Overriding Service-Level Information\n\nService-specific data can be added or overwritten using annotations in your `.cds` files with `@ORD.Extensions`.\n\n**Example:**\n\n```js\nannotate ProcessorService with @ORD.Extensions: {\n    title: 'This is Processor Service title',\n    industry: [\n        'Retail',\n        'Consumer Products'\n    ],\n    lineOfBusiness: ['Sales'],\n    extensible: { supported: 'no' }\n};\n```\n\n> **Note:**\n> Standard annotations like `@Core.Description` and `@description` are also automatically read by the plugin.\n\n---\n\n# Adding Custom ORD Content\n\nThe ORD plugin allows adding **custom ORD content** via the `customOrdContentFile` setting in `cdsrc.json`.\n\nThe override priority is as follows:\n\n```js\ncustomOrdContent > ORD.Extensions Annotations > CAP Annotations > Plugin Defaults\n```\n\n**Example configuration:**\n\n```json\n{\n    \"ord\": {\n        \"namespace\": \"sap.sample\",\n        \"description\": \"This is my custom description\",\n        \"policyLevels\": [\"sap:core:v1\"],\n        \"customOrdContentFile\": \"./path/to/custom.ord.json\"\n    }\n}\n```\n\n---\n\n## Custom ORD File Structure\n\nIn your custom ORD file, you can:\n\n- Add new ORD resources (e.g., `dataProducts`) not supported by CAP.\n- Enhance existing generated resources (e.g., add a new `package` or an API resource).\n- Patch default generated resources:\n    - Override properties.\n    - Add new properties.\n    - Delete properties by setting them to `null`.\n\n**Example `custom.ord.json`:**\n\n```json\n{\n    \"packages\": [\n        {\n            \"description\": null,\n            \"packageLinks\": [\n                {\n                    \"type\": \"terms-of-service\",\n                    \"url\": \"https://www.sap.com/corporate/en/legal/terms-of-use.html\"\n                }\n            ],\n            \"lineOfBusiness\": [\"Sales\"]\n        }\n    ],\n    \"dataProducts\": [\n        {\n            \"ordId\": \"sap.sm:dataProduct:Supplier:v1\"\n            // ...\n        }\n    ]\n}\n```\n\n---\n\n# Adding Products\n\nYou can define product relationships within the ORD document following these rules:\n\n## 1. Using an Existing SAP Product\n\nTo associate your resources with an existing SAP product, define `existingProductORDId` in `cdsrc.json`.\n\n**Example:**\n\n```json\n{\n    \"ord\": {\n        \"namespace\": \"sap.sample\",\n        \"description\": \"This is my custom description\",\n        \"policyLevels\": [\"sap:core:v1\"],\n        \"customOrdContentFile\": \"./ord/custom.ord.json\",\n        \"existingProductORDId\": \"sap:product:SAPServiceCloudV2:\"\n    }\n}\n```\n\n> In this case, the ORD document will **not** contain a `products` root property. Instead, `packages` will be assigned to the specified product via `partOfProducts`.\n\n**Example package entry:**\n\n```json\n{\n    \"ordId\": \"sap.sample:package:capireordsample-api:v1\",\n    \"title\": \"Capire ORD Sample\",\n    \"shortDescription\": \"Package containing public APIs\",\n    \"description\": \"This package contains public APIs for Capire ORD Sample.\",\n    \"version\": \"1.0.0\",\n    \"partOfProducts\": [\"sap:product:SAPServiceCloudV2:\"],\n    \"vendor\": \"sap:vendor:SAP:\"\n}\n```\n\n---\n\n## 2. Defining a Non-SAP Product\n\nIf defining a **custom product**, make sure its `ordId` **does not** start with `sap`. (The plugin validates this.)\n\n**Example:**\n\n```json\n{\n    \"ord\": {\n        \"namespace\": \"sap.sample\",\n        \"description\": \"This is my custom description\",\n        \"policyLevels\": [\"sap:core:v1\"],\n        \"customOrdContentFile\": \"./ord/custom.ord.json\",\n        \"products\": [\n            {\n                \"ordId\": \"customer:product:eb.bm.tests:\",\n                \"vendor\": \"sap:vendor:SAP:\"\n            }\n        ]\n    }\n}\n```\n\nIf the product `ordId` is invalid, the plugin will fall back to using a default value.\n\n---\n\n## 3. No Product Settings\n\nIf no explicit product settings are provided, the plugin will automatically apply its default behavior.\n\n---\n\n# Summary\n\n| Scenario                         | Approach                                          |\n| -------------------------------- | ------------------------------------------------- |\n| Global Metadata                  | Define in `cdsrc.json` under `ord`                |\n| Service Metadata                 | Use `@ORD.Extensions` annotations in `.cds` files |\n| Custom ORD Content               | Use `customOrdContentFile`                        |\n| Linking to Existing SAP Products | Use `existingProductORDId`                        |\n| Defining Custom Products         | Add `products` section manually                   |\n\n---\n\n# Parameters\n\n### `defaultVisibility`\n\nThe `defaultVisibility` property sets the default visibility for resources generated in the ORD document.\nPossible values include `\"public\"`, `\"internal\"`, or `\"private\"`.\nIf not specified, the plugin uses its built-in default.\n\n**Example:**\n\n```json\n{\n    \"ord\": {\n        \"namespace\": \"sap.sample\",\n        \"description\": \"This is my custom description\",\n        \"policyLevels\": [\"sap:core:v1\"],\n        \"defaultVisibility\": \"public\"\n    }\n}\n```\n\n> **Note:** You can override visibility for individual resources using service-level annotations or custom ORD content.\n\n---\n\n# Ord Root Property\n\nMore information, see [ord document](https://pages.github.tools.sap/CentralEngineering/open-resource-discovery-specification/spec-v1/interfaces/document)\n"
}